openapi: 3.0.0
info:
  title: Transaction Service API
  version: 1.0.0
servers:
  - url: http://localhost:8083
paths:
  /v1/transactions:
    get:
      summary: Retrieve all transaction
      operationId: getAllTransactions
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a Transaction
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Transaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/{productId}/transaction:
    get:
      summary: Retrieve all transactions by productId
      operationId: getTransactionsByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the account to retrieve transactions for.
      responses:
        '200':
          description: List of transactions for the given account ID.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: Transactions not found for the given account ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/transaction/{transactionId}:
    get:
      summary: Retrieve a transaction by ID
      operationId: getTransactionById
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a transaction
      operationId: updateTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Updated transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          '404':
            description: Transaction not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a transaction
      operationId: deleteTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Transaction deleted
          '404':
            description: Transaction not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/transaction/{clientId}/average-balances:
    get:
      summary: Retrieve daily average balances for the current month
      operationId: getDailyAverageBalancesForClient
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the client.
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date
          description:
            Start date of the period (format: YYYY-MM-DD)
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date
          description:
            End date of the period (format: YYYY-MM-DD)
      responses:
        '200':
          description: Daily average balances for all credit and bank products owned by the client in the current month.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AverageReportResponse'
        '404':
          description: No products or transactions found for the specified client in the current month.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/transaction/{productId}/commissions:
    get:
      summary: Retrieve commissions for a product in a given time period
      operationId: getCommissionsByProductAndPeriod
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the product (e.g., bank account or credit product)
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date
          description:
            Start date of the period (format: YYYY-MM-DD)
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date
          description:
            End date of the period (format: YYYY-MM-DD)
      responses:
        '200':
          description: List of commissions for the product within the specified period
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionResponse'
        '404':
          description: No commissions found for the specified product and period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    TransactionRequest:
      type: object
      required:
        - productId
        - clientId
        - amount
      properties:
        productId:
          type: string
        destinationProductId:
          type: string
        type:
          type: string
          enum: [DEPOSIT,WITHDRAWAL,PAYMENT,CHARGE]
        amount:
          type: number
          format: double
        commission:
          type: number
          format: double
        description:
          type: string
        clientId:
          type: string
        balance:
          type: number
          format: double
    TransactionResponse:
      type: object
      required:
        - clientId
        - productId
      properties:
        productId:
          type: string
        destinationProductId:
          type: string
        type:
          type: string
          enum: [DEPOSIT,WITHDRAWAL,PAYMENT,CHARGE]
        amount:
          type: number
        clientId:
          type: string
        commission:
          type: number
          format: double
        balance:
          type: number
          format: double
        createdDate:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      required:
        - status
        - code
        - message
        - timestamp
      properties:
        status:
          type: int
        code:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time

    DailyAverages:
      type: object
      required:
        - date
        - averageBalance
      description: List of daily average balances for the product.
      properties:
        date:
          type: string
          format: date
          description: The date for which the average balance is calculated.
        averageBalance:
          type: number
          format: double
          description: The average balance for the product on the specified date.

    Product:
      type: object
      required:
        - productId
        - dailyAverages
      properties:
        productId:
          type: string
          description: Identifier of the product.
        dailyAverages:
          type: array
          description: List of daily average balances for the product.
          items:
            $ref: '#/components/schemas/DailyAverages'

    AverageReportResponse:
      type: object
      required:
        - clientId
        - products
      properties:
        clientId:
          type: string
        products:
          type: array
          description: List of products with their daily average balances.
          items:
            $ref: '#/components/schemas/Product'